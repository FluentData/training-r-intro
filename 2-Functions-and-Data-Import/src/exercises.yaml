section_exercises:
  - section_title: What are Functions in R?
    text: >-
      Create a vector containing numbers 1 to 10 using R. Calculate the mean of
      this vector using the mean() function.
    solution: |-
      numbers <- c(1:10)
      mean(numbers)
    output: '5.5'
    hints:
      - Use `:` for generating sequence of numbers.
      - Apply the `mean()` function on the created vector to calculate the mean.
    explanation: >-
      In R, `c(1:10)` generates a vector of numbers from 1 to 10. The `mean()`
      function calculates the average of the elements in the vector.
  - section_title: Nesting Functions
    text: >-
      First, create a vector of numbers from 1 to 100. Then, find the mean of
      the subset of numbers that are less than 50.
    solution: |-
      numbers <- c(1:100)
      mean(subset(numbers, numbers < 50))
    output: '25'
    hints:
      - Use `:` to generate a sequence of numbers.
      - >-
        The `subset()` function can be used to filter out values in the vector
        that satisfy a particular condition.
      - Calculate the mean of the filtered values using `mean()`.
    explanation: >-
      The `subset()` function is used to select values from the vector `numbers`
      that are less than 50. The `mean()` function then calculates the average
      of these selected values.
  - section_title: Importing Data
    text: >-
      Assume we have a CSV file named `data.csv` in a `data` folder. Write a R
      command to import data from this file.
    solution: data <- read.csv("../data/data.csv")
    output: No specific output for this
    hints:
      - Use the `read.csv()` function to read the CSV file.
      - The file path should be passed as a string to the `read.csv()` function.
    explanation: >-
      In R, the `read.csv()` function is used to read a CSV file and store the
      data as a dataframe in R.
lesson_exercises:
  - text: >-
      Generate a sequence of even numbers from 2 to 20. Calculate the mean of
      the subset of numbers that are less than 10. Use functions in R.
    solution: |-
      numbers <- seq(from = 2, to = 20, by = 2)
      mean(subset(numbers, numbers < 10))
    output: '4'
    hints:
      - Use `seq()` function to generate a sequence of even numbers.
      - Use `subset()` function to obtain numbers that are less than 10.
      - Calculate the mean of the subset numbers using `mean()`.
    explanation: >-
      The `seq()` function is used to generate a sequence of even numbers from 2
      to 20. `subset()` is then used to select numbers less than 10 from this
      sequence. Finally, `mean()` is used to calculate the average.
  - text: Concatenate two strings "Hello" and "world" using built-in R functions.
    solution: paste("Hello", ", world!")
    output: '"Hello, world!"'
    hints:
      - Use `paste()` function to concatenate strings.
    explanation: >-
      The `paste()` function in R concatenates (joins) two or more character
      strings.
  - text: >-
      Create a sequence of numbers from 10 to 100, with increment of 10.
      Calculate the mean and round it off to the nearest integer.
    solution: |-
      numbers <- seq(from = 10, to = 100, by = 10)
      round(mean(numbers))
    output: '55'
    hints:
      - Use `seq()` function to generate the sequence.
      - Use `mean()` function to calculate the mean.
      - >-
        Use `round()` function to round off the value to the nearest whole
        number.
    explanation: >-
      The `seq()` function generates a sequence of numbers. The `mean()`
      function calculates the mean of these numbers. The `round()` function then
      rounds off the calculated mean to the nearest integer.
  - text: >-
      Assume that we have an Excel file named `excel_data.xlsx` in the same
      `data` folder. Write an R command to import data from this file.
    solution: |-
      library(readxl)
      excel_data <- read_excel("../data/excel_data.xlsx")
    output: No specific output for this
    hints:
      - You must load the `readxl` library using `library()` function.
      - >-
        The `read_excel()` function from `readxl` library can be used to read
        Excel files.
    explanation: >-
      The `read_excel()` function from the `readxl` library in R is used to read
      Excel files and store the data in R.
