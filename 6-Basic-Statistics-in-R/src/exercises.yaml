section_exercises:
  - section_title: Descriptive Statistics
    text: >-
      Use the `chicago_air` dataset to calculate the descriptive statistics
      (mean, median, standard deviation, variance, and correlation) of
      temperature (`temp`). Note: Ignore `NA` values and consider 'wind' for
      correlation.
    solution: |-
      mean(chicago_air$temp, na.rm = TRUE)
      median(chicago_air$temp, na.rm = TRUE)
      sd(chicago_air$temp, na.rm = TRUE)
      var(chicago_air$temp, na.rm = TRUE)
      cor(chicago_air$temp, chicago_air$wind, use = 'pairwise.complete.obs')
    output: |-
      Mean: 67.68346
      Median: 69
      Standard Deviation: 11.25372
      Variance: 126.5032
      Correlation: 0.003493102
    hints:
      - >-
        Use the `mean`, `median`, `sd`, `var` and `cor` functions in R. Remember
        to handle `NA` values appropriately.
    explanation: >-
      These commands calculate the mean, median, standard deviation, variance,
      and correlation of 'temp' with 'wind' in the `chicago_air` dataset. `NA`
      values are ignored in these calculations.
  - section_title: T-Tests
    text: >-
      Perform a one-sample t-test on the `wind` column of the `chicago_air`
      dataset with `mu` equal to 10. Ignore `NA` values.
    solution: t.test(chicago_air$wind, mu = 10, na.rm = TRUE)
    output: t = -9.2315, df = 1077, p-value < 2.2e-16
    hints:
      - >-
        Use the `t.test` function in R. Remember to set `mu` and handle `NA`
        values.
    explanation: >-
      This command performs a one-sample t-test on the `wind` column of the
      `chicago_air` dataset. Null hypothesis is that the mean wind speed is
      equal to 10. The p-value < 0.05 suggests that the mean wind speed in the
      data is significantly different from 10.
  - section_title: One-way ANOVA
    text: >-
      Perform a one-way ANOVA using the `chicago_air` dataset to see if `wind`
      speed varies significantly across different months. Ignore `NA` values.
    solution: |-
      anova_model <- aov(wind ~ month, data = chicago_air)
      summary(anova_model)
    output: 'Df: 11, Sum Sq: 506.7, Mean Sq: 46.07, F value: 4.169, Pr(>F) < 2.2e-16'
    hints:
      - >-
        Use the `aov` function for ANOVA analysis and `summary` function to
        display the results.
    explanation: >-
      These commands perform a one-way ANOVA to test if there's a difference in
      average wind speed between different months in the `chicago_air` dataset.
      The very low p-value suggests that the wind speeds do vary significantly
      across different months.
  - section_title: Simple Linear Regression
    text: >-
      Use the `chicago_air` dataset to fit a linear regression model that
      predicts `wind` speed using `temp` as a predictor. Display the model
      summary.
    solution: |-
      lm_model <- lm(wind ~ temp, data = chicago_air)
      summary(lm_model)
    output: |-
      Coefficients:
      (Intercept)  temp
       6.4572     -0.003974

      Residual standard error:4.566 on 1076 degrees of freedom
      Multiple R-squared: 3.37e-05, Adjusted R-squared: -0.0009286
      F-statistic: 0.03508 on 1 and 1076 DF, p-value: 0.8517
    hints:
      - >-
        Use the `lm` function to create a linear model, and `summary` to display
        the results.
    explanation: >-
      These commands fit a linear regression model to the `chicago_air` dataset,
      using `temp` to predict `wind` speed. The summary indicates that
      temperature is not a significant predictor of wind speed.
lesson_exercises:
  - text: >-
      Using the `chicago_air` dataset, calculate the mean `ozone` level and
      perform a t-test to check if it is different from 0.04. Afterwards, fit a
      linear regression model that predicts `ozone` level from `temp`. Ignore
      `NA` values.
    solution: >-
      avg_ozone <- mean(chicago_air$ozone, na.rm = TRUE)

      test_result <- t.test(chicago_air$ozone, mu = 0.04, na.rm = TRUE)

      lm_model <- lm(ozone ~ temp, data = chicago_air)

      list(avg_ozone = avg_ozone, test_result = test_result, lm_model =
      summary(lm_model))
    output: |-
      avg_ozone: 0.04216893
      t_value: -0.8595, p_value: 0.3904
      Coefficients:
      (Intercept)  temp
      -0.007594    0.001409
    hints:
      - >-
        Use the `mean`, `t.test` and `lm` functions while handling `NA` values.
        Remember to display the summary of the linear regression model.
    explanation: >-
      This command first calculates the mean `ozone` level in the `chicago_air`
      dataset, then conducts a t-test to check if it's different from 0.04, and
      finally fits a linear model predicting `ozone` level from `temp`. The
      p-value from the t-test is larger than 0.05, suggesting that the mean
      ozone level is not significantly different from 0.04. However, temperature
      is a significant predictor of ozone level in the linear regression model.
  - text: >-
      Calculate the correlation between `temp` and `ozone`, and then fit a
      linear regression model that predicts `ozone` level from `temp`. Use the
      `chicago_air` dataset and ignore `NA` values.
    solution: >-
      correl <- cor(chicago_air$temp, chicago_air$ozone, use =
      'pairwise.complete.obs')

      lm_model <- lm(ozone ~ temp, data = chicago_air)

      list(correlation = correl, lm_model = summary(lm_model))
    output: |-
      correlation: 0.6985414
      Coefficients:
      (Intercept)  temp
      -0.007594    0.001409
    hints:
      - >-
        Use the `cor` and `lm` functions in your implementation. Handle `NA`
        values appropriately and remember to display the summary of the linear
        regression model.
    explanation: >-
      This command first calculates the correlation between `temp` and `ozone`
      in the `chicago_air` dataset and then fits a linear regression model
      predicting `ozone` from `temp`. The correlation indicates a fairly strong
      positive relationship between temperature and ozone levels. The
      coefficients in the linear regression model also suggest that `temp` is a
      significant predictor of `ozone`.
  - text: >-
      Perform a t-test on the `ozone` column with `mu` equal to the mean `ozone`
      level, and then conduct a one-way ANOVA to test if there is a difference
      in mean `ozone` level between different months. Use the `chicago_air`
      dataset and ignore `NA` values.
    solution: |-
      avg_ozone <- mean(chicago_air$ozone, na.rm = TRUE)
      test_result <- t.test(chicago_air$ozone, mu = avg_ozone, na.rm = TRUE)
      anova_model <- aov(ozone ~ month, data = chicago_air)
      list(t_test = test_result, anova = summary(anova_model))
    output: |-
      t_value: 0, p_value: 1
      Df: 11, Sum Sq: 0.01243, Mean Sq: 0.00113, F value: 1.2, Pr(>F) < 0.2871
    hints:
      - >-
        Use the `mean`, `t.test` and `aov` functions in your script. Make sure
        you handle `NA` values appropriately.
    explanation: >-
      The command first calculates the mean `ozone` level and conducts a t-test
      to check if the mean `ozone` level differs from the calculated mean - it
      doesn't. Then it conducts a one-way ANOVA to test if there's a difference
      in mean `ozone` levels between different months. The p-value from the
      ANOVA is greater than 0.05, suggesting that the means are not
      significantly different.
