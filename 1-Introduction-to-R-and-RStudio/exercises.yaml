section_exercises:
  - section_title: Why Use R?
    text: >-
      Describe three advantages of using the R programming language for data
      analysis.
    solution: >-
      1. Specialized language for statistical analysis.

      2. Open-source nature allows for community input and continuous
      improvement.

      3. Rich ecosystem of add-on packages that simplify complex analyses.
    output: Not applicable as this is a descriptive exercise.
    hints:
      - >-
        Think about the areas where R shines: statistics, community support, and
        available packages.
    explanation: >-
      R is a powerful tool for statistical analysis due to its specialized
      features. It's open-source nature means it benefits from the insight and
      improvements offered by a global community of developers. Furthermore, the
      availability of numerous R packages augments its capabilities, offering
      streamlined solutions for complex tasks.
  - section_title: Comparing R to Python for Data Science
    text: >-
      List three reasons why someone might choose to use R over Python for data
      analysis.
    solution: |-
      1. R's specialization in statistics and data visualization.
      2. R's extensive library of packages for statistical analysis.
      3. R offers a more statistician-friendly environment.
    output: Not applicable as this is a descriptive exercise.
    hints:
      - Consider the strengths of R mentioned in the section.
    explanation: >-
      While both R and Python are powerful tools for data science, R's specific
      focus on statistical analysis and data visualization, its extensive
      library of packages, and its inherently statistician-friendly environment
      make it particularly appealing for projects heavily rooted in statistical
      analysis.
  - section_title: Installing R and RStudio
    text: Explain the roles of R and RStudio in the data analysis process.
    solution: >-
      R is the software that interprets and runs your code, while RStudio is a
      user-friendly interface that makes it easier to interact with R.
    output: Not applicable as this is a descriptive exercise.
    hints:
      - >-
        Think about the actual processing of the code and the environment in
        which you write and debug that code.
    explanation: >-
      R and RStudio provide two crucial components of the data analysis setup. R
      is the engine that runs your code, performing all of the operations and
      computations. RStudio, on the other hand, is the interface in which you
      write your code. It provides valuable features such as syntax
      highlighting, debugging tools, and project management, which can
      significantly enhance your coding experience and efficiency.
  - section_title: Tour of the RStudio Interface
    text: Identify three features of the RStudio interface and describe their uses.
    solution: >-
      1. R Console: R waits here for input and displays results.

      2. Script Pane: This is where you can write long pieces of code or
      documents.

      3. Environment/History Pane: This shows a record of previous commands and
      stored variables.
    output: Not applicable as this is a descriptive exercise.
    hints:
      - Review the description of the four main panes in the RStudio interface.
    explanation: >-
      The RStudio interface is divided into four main parts, each with a
      specific purpose. The R Console is the command line interface where you
      can input commands and see the results. The Script Pane is akin to a text
      editor where you can write scripts or documents that are longer and more
      complex. Lastly, the Environment/History Pane allows you to see your
      command history and currently stored variables, aiding in project
      management and preventing repetition.
lesson_exercises:
  - text: >-
      Provide a step-by-step guide for someone on how to install R and RStudio
      on their computer.
    solution: >-
      1. Go to the CRAN download page and choose a mirror near your location.

      2. Click on the version of R for your OS and follow the instructions to
      download and install R.

      3. Go to the RStudio download page and under 'Installers for Supported
      Platforms', click on the installer for your OS and follow the instructions
      to download and install RStudio.
    output: Not applicable as this is a descriptive exercise.
    hints:
      - >-
        Steps for installing R and RStudio are mentioned in the 'Installing R
        and RStudio' section.
    explanation: >-
      Installing R and RStudio is a straightforward process. Visit the CRAN and
      RStudio websites, select the appropriate versions of their software for
      your OS, and follow the respective instructions provided. After a
      successful installation, you should be able to launch RStudio and begin
      your work in R.
  - text: Write a short command in R to add two numbers.
    solution: 2 + 3
    output: '5'
    hints:
      - In R, you can simply use the '+' operator to add two numbers.
    explanation: >-
      Using the '+' operator in R allows you to add two numbers together. The
      command '2 + 3' asks R to evaluate the sum of 2 and 3, which is 5.
  - text: >-
      Explain the main differences between Python and R as tools for data
      analysis.
    solution: >-
      While both are powerful tools for data analysis, Python is a
      general-purpose language suitable for a variety of tasks beyond just data
      analysis. R, in contrast, is specifically tailored towards statistics,
      data visualization, and data manipulation, offering a more
      statistician-friendly environment. Additionally, R's extensive package
      library, specifically for statistical analysis, is one of its core
      strengths.
    output: Not applicable as this is a descriptive exercise.
    hints:
      - >-
        Review the 'Comparing R to Python for Data Science' section in the
        material.
    explanation: >-
      Python and R are both used in data analysis but differ in their scope and
      strengths. Python, being a general-purpose language, is ideal for various
      tasks beyond data analysis. On the other hand, R was specifically designed
      for statistics and data manipulation, and has a richer and more extensive
      package ecosystem suitable for data analysis, making it somewhat easier
      and more intuitive to use for statisticians and data scientists.
