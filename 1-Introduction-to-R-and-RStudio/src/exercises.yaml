section_exercises:
  - section_title: Why Use R
    text: >-
      What are the main advantages of using R for data analysis, and how is it
      different from Python?
    solution: >-
      The answers can vary, but you should mention that one of the main
      advantages of R is that it's open-source and has a rich ecosystem of
      add-on packages. As for the comparison to Python, R is more of a
      specialized language with a focus on statistics, data visualization, and
      data manipulation, which is reflected in its vast libraries, while Python
      is a more general-purpose language.
    output: Not applicable
    hints:
      - Consider the nature of each programming language.
      - Keep in mind the area where each language excels.
    explanation: >-
      The key to answering this question lies in understanding the strengths and
      weaknesses of each language. R was specifically developed for statistical
      analysis and data visualization, thus making it an effective tool for data
      science. Moreover, since it's open-source, it has a large community of
      developers who constantly improve it and add new functionality. On the
      other hand, Python is a more general-purpose programming language that is
      also used for web and software development. While Python is powerful and
      versatile, R's focus gives it an edge in statistical analysis.
  - section_title: Installing R and RStudio
    text: >-
      In your own words, describe the steps to install R and RStudio on your
      computer.
    solution: >-
      The first step is to install R from the Comprehensive R Archive Network
      (CRAN) by visiting the CRAN download page. Here, you select a mirror close
      to your geographical location and then download the version of R suitable
      for your operating system. Install R by following the instructions
      provided. After this, install RStudio by visiting the RStudio download
      page. Download the installer for your operating system under the section
      'Installers for Supported Platforms' and follow the instructions provided
      to install RStudio.
    output: Not applicable
    hints:
      - Remember to suggest visiting the CRAN download page for R.
      - Don't forget to mention visiting the RStudio download page for RStudio.
    explanation: >-
      This question requires the appropriate sequence of steps needed to install
      R and RStudio. It involves visiting the CRAN download page to select and
      install the correct version of R for your operating system, then going to
      the RStudio download page to do the same for RStudio. Both sets of
      instructions should be easy to follow, but it's important to remember to
      follow them in order.
  - section_title: Tour of the RStudio Interface
    text: Write a brief description of the four main panes in RStudio.
    solution: >-
      RStudio has four main panes: 

      1. The R console pane: This is where R waits for instructions and displays
      command results. 

      2. The Script pane: Longer pieces of code can be written here or documents
      created that mix text, code, and output. 

      3. The Environment/History pane: Records of previously entered commands
      (History tab) and defined items for later use (Environment tab) can be
      viewed here. 

      4. The Files/Plots/Packages/Help pane: Different functionalities here
      include one for browsing files in your current working directory (Files
      tab), viewing created plots (Plots tab), and accessing help on function
      uses (Help tab).
    output: Not applicable
    hints:
      - Remember that RStudio interface consists of four main panes.
      - Each pane has a specific functionality.
    explanation: >-
      The RStudio interface is organized into four main “panes”: the R console
      pane (where R waits for commands and where command results are displayed),
      a script pane (where you can write longer blocks of code or create
      documents), an Environment/History pane (where you can see previously
      entered commands and outputs, as well as defined variables), and a
      Files/Plots/Packages/Help pane (which contains different functionalities
      such as file browsing, plot viewing, and function help).
lesson_exercises:
  - text: What is RStudio and why do we need it?
    solution: >-
      RStudio is an integrated development environment (IDE) for R. It provides
      a user-friendly interface that makes interacting with R much more
      convenient. While it is not required to write and run R code, it makes the
      process of writing and debugging this code much easier due to its
      structured format and extra tools and utilities. For example, RStudio
      allows for multi-tab scripting, plain text or script editing, command
      history tracking, and easy access to pre-installed R documentation.
    output: Not applicable
    hints:
      - Describe what RStudio is.
      - Emphasize why it is helpful for coding in R.
    explanation: >-
      RStudio provides a clear layout that allows for efficient and effective R
      scripting. It is faithful to R's principles while also expanding upon the
      principle software with a variety of helpful features. RStudio facilitates
      efficient scripting, easier debugging, and provides a series of additional
      tools that enhance the user's coding experience.
  - text: >-
      How would you define a variable in R and what are some types of variables
      you can define?
    solution: >-
      In R, a variable can be defined using the assignment operator '<-'. For
      example, we can define a variable x that holds the value 10 as follows: 'x
      <- 10'. The types of variables we can define in R include numeric,
      character (strings), logical (TRUE/FALSE), and complex.
    output: Not applicable
    hints:
      - Think about the syntax for defining variables in R.
      - Remember the different types of variables you can have.
    explanation: >-
      Variable assignment in R is done using the assignment operator '<-'. The
      types of variables vary from simple ones like numeric and character, to
      more complex ones like vectors, matrices, data frames, and lists. Specific
      types such as logical are also available, where the variable can take the
      value TRUE or FALSE.
  - text: Describe the workflow of a simple calculation (e.g., 2+2) in RStudio.
    solution: >-
      You would type the calculation into the Console pane in RStudio, which is
      usually located in the bottom left corner. You then hit 'Enter' to execute
      the command. The console will display the result of the calculation
      immediately after you hit 'Enter'. So for the calculation '2+2', after
      typing this into the Console pane and hitting 'Enter', the console will
      display the result '4'.
    output: Not applicable
    hints:
      - Remember which pane you would enter your command in.
      - >-
        Consider how you would execute the command and where the result would be
        displayed.
    explanation: >-
      The console is the area in RStudio where you can type commands and see
      their output. You type the expression you want to calculate, in this case
      '2+2', into the console pane and press 'Enter'. After the command is
      executed by R, the console displays the result of the calculation.
